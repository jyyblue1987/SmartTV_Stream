package com.live.channel.network;import java.util.HashMap;import java.util.List;import com.live.channel.Const;import common.library.utils.AndroidUtils;import common.library.utils.DataUtils;import common.network.utils.ResultCallBack;public class ServerManager {			private static void sendRqeust(HashMap<String, String> params, String command,			ResultCallBack callBack) {		ServerTask task = new ServerTask(command, callBack, params);				if (AndroidUtils.getAPILevel() > 12) {			//task.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR, "");			task.execute("");		} else {			task.execute("");		}	}		private static void sendRqeust(List<HashMap<String, String>> paramsList, List<String> commandList,			ResultCallBack callBack) {		ServerTask task = new ServerTask(commandList, callBack, paramsList);				if (AndroidUtils.getAPILevel() > 12) {			//task.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR, "");			task.execute("post");		} else {			task.execute("post");		}	}		private static void sendRqeustGet(HashMap<String, String> params, String command,			ResultCallBack callBack) {		ServerTask task = new ServerTask(command, callBack, params);				if (AndroidUtils.getAPILevel() > 12) {			//task.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR, "");			task.execute("get");		} else {			task.execute("get");		}	}			private static void sendRqeustToOtherService(String url, HashMap<String, String> params, ResultCallBack callBack) {		WebServiceTask task = new WebServiceTask(url, callBack, params);		task.execute("");			}		public static void login(String device_id, ResultCallBack callback)	{		HashMap<String, String> map = new HashMap<String, String>();				map.put("device_id_number", device_id);				sendRqeust(map, "device_id", callback);	}		public static void getCategoryList(String userid, ResultCallBack callback)	{		HashMap<String, String> map = new HashMap<String, String>();				map.put(Const.USER_ID, userid);				sendRqeustGet(map, "category_list", callback);	}}